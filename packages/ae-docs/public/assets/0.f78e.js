(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{"./packages/ae-docs/pages/Core.mdx":function(e,a,n){"use strict";n.r(a),n.d(a,"default",function(){return N});var s=n("./node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js"),t=n("./node_modules/@babel/runtime/helpers/esm/classCallCheck.js"),o=n("./node_modules/@babel/runtime/helpers/esm/createClass.js"),m=n("./node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js"),p=n("./node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js"),r=n("./node_modules/@babel/runtime/helpers/esm/inherits.js"),c=n("./node_modules/react/index.js"),l=n.n(c),g=n("./node_modules/@mdx-js/tag/dist/index.js"),N=function(e){function a(e){var n;return Object(t.a)(this,a),(n=Object(m.a)(this,Object(p.a)(a).call(this,e))).layout=null,n}return Object(r.a)(a,e),Object(o.a)(a,[{key:"render",value:function(){var e=this.props,a=e.components;Object(s.a)(e,["components"]);return l.a.createElement(g.MDXTag,{name:"wrapper",components:a},l.a.createElement(g.MDXTag,{name:"h1",components:a,props:{id:"algebraic-effectscore"}},"@algebraic-effects/core"),l.a.createElement(g.MDXTag,{name:"p",components:a},"Core functions (createEffect) to help you create custom effects"),l.a.createElement(g.MDXTag,{name:"hr",components:a}),l.a.createElement(g.MDXTag,{name:"h2",components:a,props:{id:"program"}},"Program"),l.a.createElement(g.MDXTag,{name:"p",components:a},"A program is a pure, cancellable generator that calls at least one operation."),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// program :: Program<IOEffect, ConsoleEffect> String -> ()"),"\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," program = ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," *(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"greetText"),") "),"{\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," name = ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," IOEffect.getInput(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'What is your name?'"),");\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," ConsoleEffect.log(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'>> Name'"),", name);\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," IOEffect.showMessage(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"`Hello, ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-subst"}},"${name}"),"! ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-subst"}},"${greetText}"),"`"),");\n};")),l.a.createElement(g.MDXTag,{name:"h2",components:a,props:{id:"createeffect"}},"createEffect"),l.a.createElement(g.MDXTag,{name:"p",components:a},"Create effect allows you to write your own custom effects"),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-haskell"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-title"}},"createEffect")," :: (",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"String"),", ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"Object")," ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"OpSignature"),") -> ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"Effect"))),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"import")," { createEffect } ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"from")," ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'@algebraic-effects/core'"),";\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," IOEffect = createEffect(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'IOEffect'"),", {\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"getInput"),": func([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'question'"),"], ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'name'"),"),\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"showMessage"),": func([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'message'"),"]),\n});")),l.a.createElement(g.MDXTag,{name:"h2",components:a,props:{id:"func"}},"func"),l.a.createElement(g.MDXTag,{name:"p",components:a},"Describe your function signature. The only validation is for the length of arguments, the rest of the data is purely for documentation."),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-haskell"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-class"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"type")," ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-type"}},"OpSignature")," = ([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-type"}},"String"),"], ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-type"}},"String"),")"),"\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-title"}},"func")," :: ([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"String"),"], ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"String"),") -> ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"OpSignature"))),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"import")," { func } ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"from")," ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'@algebraic-effects/core'"),";\n\nfunc([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'a'"),", ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'b'"),"], ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'result'"),");\nfunc([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'id'"),", ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'?options'"),"], ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'user'"),"); ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Optional parameters"),"\nfunc([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'message'"),", ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'...ids'"),"]); ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Spread parameters + no return value"),"\nfunc(); ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Any number of arguements + no return value"),"\nfunc([]); ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// 0 arguements + no return value"))),l.a.createElement(g.MDXTag,{name:"h3",components:a,props:{id:"flowoperators"}},"FlowOperators"),l.a.createElement(g.MDXTag,{name:"p",components:a},"Currently, there are 5 flow operators that you can use to control the flow of your program."),l.a.createElement(g.MDXTag,{name:"ul",components:a},l.a.createElement(g.MDXTag,{name:"li",components:a,parentName:"ul"},l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"resume")," allows you to continue the execution of your program. Passing a value to it will become the return value of the halted operation."),l.a.createElement(g.MDXTag,{name:"li",components:a,parentName:"ul"},l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"end")," allows you to end your program and resolve with a value."),l.a.createElement(g.MDXTag,{name:"li",components:a,parentName:"ul"},l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"throwError")," allows you to end your program and reject with an error."),l.a.createElement(g.MDXTag,{name:"li",components:a,parentName:"ul"},l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"call")," allows you to hand over the flow to another program/call another program till it resolves. It returns a ",l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"Task")," instance."),l.a.createElement(g.MDXTag,{name:"li",components:a,parentName:"ul"},l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"li"},"promise")," is a shorthand for ",l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"li"},".then(resume).catch(throwError)"))),l.a.createElement(g.MDXTag,{name:"h2",components:a,props:{id:"effecthandler"}},"Effect.handler"),l.a.createElement(g.MDXTag,{name:"p",components:a},"Lets you define handlers to your effect and creates a runner."),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-haskell"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-class"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"type")," ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-type"}},"Handler")," = ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-type"}},"FlowOperators")," -> (...",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"a"),") -> ();"),"\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"Effect"),".handler :: ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"Object")," ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"Handler")," -> ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"Runner"))),l.a.createElement(g.MDXTag,{name:"p",components:a},l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"handler")," method creates a handler instance. You can call that with your program to run it. Running a handler returns ",l.a.createElement(g.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#task"}},"an instance of ",l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"a"},"Task")," which is a lazy, asynchronous task monad"),"."),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," myEffHandler = MyEffect.handler({\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"increment"),": ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ resume }"),") =>")," (a) => resume(a + ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"1"),"), ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Will increment and return a + 1 after the yield"),"\n  imDone: ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ end }"),") =>")," (a) => end(a), ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Will end the program and return a"),"\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"throw"),": ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ throwError }"),") =>")," () => throwError(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"new")," ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-built_in"}},"Error"),"()), ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Will throw out of the program for you to catch"),"\n  callMyOtherProgram: ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ call, throwError, resume }"),") =>")," () =>\n    call(myOtherProgram, ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'arg1'"),", ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'arg2'"),").fork(throwError, resume), ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Will call an outside program with the same set of effects"),"\n  _: ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ end }"),") =>")," a => end(a), ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Default behavior. This will be called for any yielded value thats not an effect operation and at the end of the program."),"\n});\n\nmyEffHandler.run(myProgram).fork(onSuccess, onFailure);")),l.a.createElement(g.MDXTag,{name:"h2",components:a,props:{id:"run-your-program"}},"Run your program"),l.a.createElement(g.MDXTag,{name:"p",components:a},"You can call your program in any of the following ways. Doing this will return a ",l.a.createElement(g.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#task"}},"Task")," instance. You can then call the ",l.a.createElement(g.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#task.instance-methods"}},l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"a"},".fork"))," method on task to run start running your program."),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js"}},"myEffHandler(program, ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'Hello world'"),").fork(onError, onSuccess);\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// OR"),"\nmyEffHandler.run(program, ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'Hello world'"),").fork(onError, onSuccess);\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// OR"),"\nmyEffHandler.run(program(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'Hello world'"),")).fork(onError, onSuccess);")),l.a.createElement(g.MDXTag,{name:"h2",components:a,props:{id:"multiple-continuations"}},"Multiple continuations"),l.a.createElement(g.MDXTag,{name:"p",components:a},"Handler instance has a method called ",l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"runMulti"),". You can use this method to execute your program in multiple continuations mode. This allows you to call resume multiple times synchronously."),l.a.createElement(g.MDXTag,{name:"blockquote",components:a},l.a.createElement(g.MDXTag,{name:"blockquote",components:a,parentName:"blockquote"},l.a.createElement(g.MDXTag,{name:"p",components:a,parentName:"blockquote"},"NOTE: Asynchronous calls to resume may result in your program exiting earlier than expected but it will still execute the required operations."))),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," ListEffect = createEffect(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'ListEffect'"),", {\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"takeItem"),": func([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'list'"),"], ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'*'"),", { ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"isMulti"),": ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-literal"}},"true")," }), ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// isMulti flag indicates that this operation resumes multiple times"),"\n});\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Program will resolve with [3, 4, 6, 7]"),"\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function")," *",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"program"),"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}}),") "),"{\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," item1 = ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," ListEffect.takeItem([ ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"1"),", ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"4")," ]);\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," item2 = ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," ListEffect.takeItem([ ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"2"),", ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"3")," ]);\n\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," Logger.log(item, item2); ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Logs 1 2 then 1 3 then 4 2 and finally 4 3"),"\n\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"return")," item1 + item2;\n}\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," loopEff = ListEffect.handler({\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"takeItem"),": ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ resume }"),") =>")," list => list.forEach(resume),\n});\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// runMulti method will start your program in mutiple continuations mode"),"\nloopEff\n  .with(Logger.from(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-built_in"}},"console"),"))\n  .runMulti(program)\n  .fork(\n    handleError,\n    data => ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-built_in"}},"console"),".log(data), ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// [3, 4, 6, 7]"),"\n  );")),l.a.createElement(g.MDXTag,{name:"h2",components:a,props:{id:"cancelling"}},"Cancelling"),l.a.createElement(g.MDXTag,{name:"p",components:a},"A call to ",l.a.createElement(g.MDXTag,{name:"a",components:a,parentName:"p",props:{href:"#task.instance-methods"}},l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"a"},".fork"))," returns a function that when called, will cancel your program and stop its execution at the last run operation."),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function"),"* ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"myProgram"),"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}}),") "),"{\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," Logger.log(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'Will log this'"),");\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," sleep(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"1000"),");\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," Logger.log(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'Will NOT log this'"),");\n}\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," logger = Logger.handler({ ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"log"),": ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"/**/")," });\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," cancel =\n  logger.run(myProgram)\n    .fork(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"()")," =>")," {}, () => {}); ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Will not call either of the functions"),"\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Cancel after 500ms"),"\nsetTimeout(cancel, ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-number"}},"500"),");")),l.a.createElement(g.MDXTag,{name:"h2",components:a,props:{id:"composing-effects-and-handlers"}},"Composing effects and handlers"),l.a.createElement(g.MDXTag,{name:"p",components:a},"To compose handlers, you can use the ",l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"concat")," or ",l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"with")," method or the ",l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"composeHandlers")," function."),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"import")," { createEffect, composeHandlers } ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"from")," ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'@algebraic-effects/core'"),";\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," ProfileApi = createEffect(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'ProfileApi'"),", { ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"search"),": func([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'q'"),"]) });\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," Console = createEffect(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'Console'"),", { ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"log"),": func([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'...data'"),"]) });\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," api = ProfileApi.handler({\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"search"),": ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ resume, throwError }"),") =>")," q =>\n    fetch(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"`/users/search?q=",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-subst"}},"${q}"),"`"),").then(resume).catch(throwError),\n});\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," logger = Console.handler({\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"log"),": ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ resume }"),") =>")," (...data) => resume(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-built_in"}},"console"),".log(...data)),\n});\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function"),"* ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"searchUsers"),"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"query"),") "),"{\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," users = ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," ProfileApi.search(query);\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," Console.log(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'Users'"),", users);\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," users.map(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"user")," =>")," user.name);\n}\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Now compose the handlers as ..."),"\n\napi.with(logger).run(searchUsers, ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'Akshay'"),").fork(onError, onSuccess);\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// OR"),"\n\napi.concat(logger).run(searchUsers, ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'Ramu'"),").fork(onError, onSuccess);\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// OR"),"\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," handler = composeHandlers(api, logger);\nhandler(searchUsers, ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'Ramu'"),").fork(onError, onSuccess);")),l.a.createElement(g.MDXTag,{name:"h2",components:a,props:{id:"extend-your-effects"}},"Extend your effects"),l.a.createElement(g.MDXTag,{name:"p",components:a},"You can create a new effect by extending an existing one."),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-haskell"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"Effect"),".extendAs :: (",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"String"),", ?",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"Object")," ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"OpSignature"),") -> ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-type"}},"Effect"))),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," MyConsoleEffect = ConsoleEffect.extendAs(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'MyConsoleEffect'"),", {\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"logError"),": func([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'error'"),"], ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'error'"),"),\n});\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," CountState = State.extendAs(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'CountState'"),"); ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// You dont need the second parameter"))),l.a.createElement(g.MDXTag,{name:"h2",components:a,props:{id:"putting-it-all-to-use"}},"Putting it all to use"),l.a.createElement(g.MDXTag,{name:"h3",components:a,props:{id:"create-your-own-effect-for-io"}},"Create your own Effect for I/O"),l.a.createElement(g.MDXTag,{name:"p",components:a},"In the example below, we have created a I/O effect with the operations ",l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"getInput")," and ",l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"showMessage"),". The behavior of those operations are not defined with the type as this just acts as the interface marking control flow to the actual effect."),l.a.createElement(g.MDXTag,{name:"p",components:a},"You can write your program without worrying about the behavior of those effects."),l.a.createElement(g.MDXTag,{name:"p",components:a},"You can then call the ",l.a.createElement(g.MDXTag,{name:"inlineCode",components:a,parentName:"p"},"handler")," method to attach behavior/control flow to the operations."),l.a.createElement(g.MDXTag,{name:"pre",components:a},l.a.createElement(g.MDXTag,{name:"code",components:a,parentName:"pre",props:{className:"hljs language-js"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," IOEffect = createEffect(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'IOEffect'"),", {\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"getInput"),": func([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'label'"),"], ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'name'"),"),\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"showMessage"),": func([",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'message'"),"]),\n});\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// greetUser :: Program<IOEffect> String ()"),"\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-keyword"}},"function"),"* ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-title"}},"greetUser"),"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"greetText"),") "),"{\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Will show the modal to a user and halt the execution till the user submits their response."),"\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," name = ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," IOEffect.getInput(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'What is your name?'"),");\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"yield")," IOEffect.showMessage(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"`Hello, ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-subst"}},"${name}"),"! ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-subst"}},"${greetText}"),"`"),");\n}\n\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// io :: Runner"),"\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-keyword"}},"const")," io = IOEffect.handler({\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Some showModal function that accepts an onSubmit callback"),"\n  getInput: ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ resume }"),") =>")," label => showModal({ label, ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"onSubmit"),": resume }),\n  ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-attr"}},"showMessage"),": ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-function"}},"(",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"span",props:{className:"hljs-params"}},"{ resume }"),") =>")," message => {\n    ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},"// Some renderMessage function that renders a text"),"\n    renderMessage(message);\n    resume();\n  };\n});\n\nio.run(greetUser, ",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-string"}},"'Welcome!'"),").fork(onError, onSuccess);\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},'// Shows a modal with the text "What is your name?" and an input form.'),"\n",l.a.createElement(g.MDXTag,{name:"span",components:a,parentName:"code",props:{className:"hljs-comment"}},'// When you click on the submit, it renders a message that reads. "Hello Akshay! Welcome!"'))))}}]),a}(l.a.Component)}}]);